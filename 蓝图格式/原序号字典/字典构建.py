from pprint import pformat
import 蓝图格式.原序号字典.原始_序号转图标 as 序号转图标
import 蓝图格式.原序号字典.原始_序号转模型 as 序号转模型

# Usage: python -m 蓝图格式.原序号字典.字典构建
if __name__ != "__main__":
    raise Exception("本文件只能执行，不能导入")


def 反转字典(original_dict):
    return {v: k for k, v in original_dict.items()}

def 序号字典目录() -> str:
    return __file__.split("蓝图格式")[0] + "蓝图格式/序号字典"

def 字典转文本(输入字典: dict) -> str:
    内容 = pformat(输入字典, width=200, indent=4)
    内容 = 内容.replace("{", " ").replace("}", "")
    return f"{{\n{内容}\n}}\n"

def 添加前缀(原始字典, 前缀):
    return {k: f"{前缀}:{v}" for k, v in 原始字典.items()}

def 文件头部注释与导入() -> str:
    return f"""
# 请不要修改这个文件
# 这个文件由 原序号字典下的几个py构建而成
# 自动生成时间：{__import__("datetime").datetime.now().strftime("%Y-%m-%d %H:%M:%S")}

from typing import Dict
""".strip()

# 图标与序号 #
l_序号转建筑     = 添加前缀(序号转图标.序号转建筑, "建筑")
l_序号转纯物品   = 添加前缀(序号转图标.序号转纯物品, "纯物品")
l_序号转纯图标   = 添加前缀(序号转图标.序号转纯图标, "纯图标")
l_序号转高效配方 = 添加前缀(序号转图标.序号转高效配方, "高效配方")
l_序号转科技     = 添加前缀(序号转图标.序号转科技, "科技")

l_建筑转序号     = 反转字典(序号转图标.序号转建筑)
l_纯物品转序号   = 反转字典(序号转图标.序号转纯物品)
l_纯图标转序号   = 反转字典(序号转图标.序号转纯图标)
l_高效配方转序号 = 反转字典(序号转图标.序号转高效配方)
l_科技转序号     = 反转字典(序号转图标.序号转科技)

# 蓝图中未定义物品往往是0
l_序号转图标 = {
    0 : "未定义",
    **l_序号转建筑,
    **l_序号转纯物品,
    **l_序号转纯图标,
    **l_序号转高效配方,
    **l_序号转科技
}

l_图标转序号= {
   "未定义" : 0,
    **l_建筑转序号,
    **l_纯物品转序号,
    **l_纯图标转序号,
    **l_高效配方转序号,
    **l_科技转序号
}

文件文本 = f"""
{文件头部注释与导入()}
# 用法: 
# from 蓝图格式.序号字典.图标与序号 import 序号转建筑, 序号转纯物品, 序号转纯图标, 序号转高效配方, 序号转科技, 序号转图标
# from 蓝图格式.序号字典.图标与序号 import 建筑转序号, 纯物品转序号, 纯图标转序号, 高效配方转序号, 科技转序号, 图标转序号

# 正向映射
序号转建筑: Dict[int, str] = {字典转文本(l_序号转建筑)}
序号转纯物品: Dict[int, str] = {字典转文本(l_序号转纯物品)}
序号转纯图标: Dict[int, str] = {字典转文本(l_序号转纯图标)}
序号转高效配方: Dict[int, str] = {字典转文本(l_序号转高效配方)}
序号转科技: Dict[int, str] = {字典转文本(l_序号转科技)}
序号转图标: Dict[int, str] = {字典转文本(l_序号转图标)}

# 反向映射
建筑转序号: Dict[str, int] = {字典转文本(l_建筑转序号)}
纯物品转序号: Dict[str, int] = {字典转文本(l_纯物品转序号)}
纯图标转序号: Dict[str, int] = {字典转文本(l_纯图标转序号)}
高效配方转序号: Dict[str, int] = {字典转文本(l_高效配方转序号)}
科技转序号: Dict[str, int] = {字典转文本(l_科技转序号)}
图标转序号: Dict[str, int] = {字典转文本(l_图标转序号)}
""".strip()

with open(f"{序号字典目录()}/图标与序号.py", "w", encoding="utf-8") as f:
    f.write(文件文本)
    f.write("\n")

print("硬编码文件 图标与序号.py 生成成功！")

# 模型与序号 #
l_序号转模型 = {
    46: "蓄电器（满）",
    **序号转模型.序号转模型,
}

l_模型转序号 = {
    "蓄电器": 46,
    "蓄电器（满）": 46,
    **反转字典(序号转模型.序号转模型)
}

# 输出10个字典
文件文本 = f"""
{文件头部注释与导入()}
# 用法: from 蓝图格式.序号字典.模型与序号 import 序号转模型, 模型转序号

# 正向映射
序号转模型: Dict[int, str] = {字典转文本(序号转模型.序号转模型)}

# 反向映射
模型转序号: Dict[str, int] = {字典转文本(l_模型转序号)}
""".strip()

with open(f"{序号字典目录()}/模型与序号.py", "w", encoding="utf-8") as f:
    f.write(文件文本)
    f.write("\n")

print("硬编码文件 模型与序号.py 生成成功！")

