from 功能.格式查找 import 蓝图内查找
import 日志
from 蓝图格式.建筑 import 建筑类型分析

# 未测试

def 拆除重排列(输入数据,  接口无效化告警: bool = False) -> None:
    建筑列表 = 蓝图内查找(输入数据).所有建筑()
    # 1. 过滤待拆除的建筑
    过滤后建筑列表 = [建筑 for 建筑 in 建筑列表 if 建筑.悠米_建筑类型 != 建筑类型分析.待拆除]
    # 2. 生成序号映射字典 {旧序号 -> 新序号}
    序号映射字典: dict[int, int] = {}
    for 新序号, 建筑 in enumerate(过滤后建筑列表):
        序号映射字典[建筑.建筑序号] = 新序号
    # 3. 更新建筑序号和接口目标序号
    for 新序号, 建筑 in enumerate(过滤后建筑列表):
        建筑.建筑序号 = 新序号
        if 建筑.输入接口.目标序号 in 序号映射字典:
            建筑.输入接口.目标序号 = 序号映射字典[建筑.输入接口.目标序号]
        else:
            建筑.输入接口.目标序号 = -1
            日志.警告(f"接口无效化告警: {接口无效化告警}") if 接口无效化告警 else None
        if 建筑.输出接口.目标序号 in 序号映射字典:
            建筑.输出接口.目标序号 = 序号映射字典[建筑.输出接口.目标序号]
        else:
            建筑.输出接口.目标序号 = -1
            日志.警告(f"接口无效化告警: {接口无效化告警}") if 接口无效化告警 else None
    # 4. 直接清空原列表并重新填充
    建筑列表.clear()
    建筑列表.extend(过滤后建筑列表)

