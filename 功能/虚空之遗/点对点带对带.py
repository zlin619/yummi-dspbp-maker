from copy import deepcopy
from 功能.指鹿为马.通用 import 物品替换
from 功能.格式查找 import 蓝图内查找
import 日志
from 蓝图格式.图标 import 图标
from 蓝图格式.序号字典 import 图标与序号
from 蓝图格式.建筑 import 建筑
from 蓝图格式.蓝图 import 蓝图
from 蓝图格式.额外参数 import 额外参数之传送带, 额外参数之空白

class _连接管理器:
    l_断开点转数字: dict[int, int]
    l_数字转连接点: dict[int, int]
    l_断开点转连接点: dict[int, int]
    l_所有断开点序号: set[int]
    l_所有连接点序号: set[int]
    所有建筑: list[建筑]

    def __init__(self, 蓝图或建筑群):
        self.l_断开点转数字 = {}
        self.l_数字转连接点 = {}
        self.l_断开点转连接点 = {}
        self.l_所有断开点序号 = set()
        self.l_所有连接点序号 = set()
        self.所有建筑 = 蓝图内查找(蓝图或建筑群).所有建筑()

    def 查找连接(self) -> None:
        for 当前建筑 in self.所有建筑:
            if not 当前建筑.模型序号.是传送带吗():
                continue
            if not isinstance(当前建筑.额外参数, 额外参数之传送带):
                continue
            l_建筑序号: int = 当前建筑.建筑序号
            l_图标图案: 图标 = 当前建筑.额外参数.图标ID
            l_图标数字: int = int(当前建筑.额外参数.图标数字)
            if l_图标图案 == 图标('纯图标:目标点'):
                self.l_数字转连接点[l_图标数字] = l_建筑序号
            elif l_图标图案 == 图标('纯图标:断开连接'):
                self.l_断开点转数字[l_建筑序号] = l_图标数字
            else:
                pass

    def 测算关系(self) -> None:
        for 断开点_建筑序号, 图标数字 in self.l_断开点转数字.items():
            if 图标数字 in self.l_数字转连接点:
                连接点_建筑序号 = self.l_数字转连接点[图标数字]
                self.l_断开点转连接点[断开点_建筑序号] = 连接点_建筑序号
                self.l_所有断开点序号.add(断开点_建筑序号)
                self.l_所有连接点序号.add(连接点_建筑序号)

    @staticmethod
    def 连接转移(当前建筑: 建筑, 对侧建筑: 建筑) -> None:
        if 当前建筑.输入接口.目标序号 != -1:
            if 对侧建筑.输入接口.目标序号 == -1:
                对侧建筑.输入接口 = deepcopy(当前建筑.输入接口)
            当前建筑.输入接口.目标序号 = -1
        if 当前建筑.输出接口.目标序号 != -1:
            if 对侧建筑.输出接口.目标序号 == -1:
                对侧建筑.输出接口 = deepcopy(当前建筑.输出接口)
            当前建筑.输出接口.目标序号 = -1

    def 重连(self) -> None:
        for 当前建筑 in self.所有建筑:
            if 当前建筑.输入接口.目标序号 in self.l_断开点转连接点:
                当前建筑.输入接口.目标序号 = self.l_断开点转连接点[当前建筑.输入接口.目标序号]
            if 当前建筑.输出接口.目标序号 in self.l_断开点转连接点:
                当前建筑.输出接口.目标序号 = self.l_断开点转连接点[当前建筑.输出接口.目标序号]
            if 当前建筑.建筑序号 in self.l_断开点转连接点:
                对侧建筑序号 = self.l_断开点转连接点[当前建筑.建筑序号]
                对侧建筑 = self.所有建筑[对侧建筑序号]
                _连接管理器.连接转移(当前建筑, 对侧建筑)
                物品替换(当前建筑).拆()
                当前建筑.额外参数 = 额外参数之空白()
                continue

    def 清除记号(self) -> None:
        for 当前建筑 in self.所有建筑:
            if not 当前建筑.模型序号.是传送带吗():
                continue
            if 当前建筑.建筑序号 not in self.l_所有连接点序号:
                continue
            当前建筑.额外参数 = 额外参数之空白()
            物品替换(当前建筑).为分拣器(图标("分拣器"))

# 三句话总结
# 如果有个建筑本来连向(输入输出都算)"断开4021"
# 那么它会重连向"连接4021"
# 其他数字同理
def 点对点带对带重连(蓝图或建筑群) -> None:
    l_连接管理器 = _连接管理器(蓝图或建筑群)
    l_连接管理器.查找连接()
    l_连接管理器.测算关系()
    l_连接管理器.重连()
    l_连接管理器.清除记号()
