

from 功能.格式查找 import 蓝图内查找
from 蓝图格式.建筑 import 建筑
from 蓝图格式.接口分析.单接口分析 import 单接口分析, 建筑预览, 接口主导者, 接口方向




def 按分析移除连接(蓝图或建筑群, 待删除接口分析: 单接口分析):
    l_所有建筑 = 蓝图内查找(蓝图或建筑群).所有建筑()
    对侧建筑序号 = 待删除接口分析.连接建筑.建筑序号
    if 待删除接口分析.主导者 == 接口主导者.自身:
        主导建筑: 建筑 = l_所有建筑[待删除接口分析.自身建筑.建筑序号]
        被动建筑: 建筑 = l_所有建筑[待删除接口分析.连接建筑.建筑序号]
        主导接口分析: 单接口分析 = 待删除接口分析
        被动接口分析: 单接口分析 = 被动建筑.悠米_接口分析.按建筑查找(对侧建筑序号)
    elif 待删除接口分析.主导者 == 接口主导者.目标:
        主导建筑 = l_所有建筑[待删除接口分析.连接建筑.建筑序号]
        被动建筑 = l_所有建筑[待删除接口分析.自身建筑.建筑序号]
        主导接口分析: 单接口分析 = 主导建筑.悠米_接口分析.按建筑查找(对侧建筑序号)
        被动接口分析: 单接口分析 = 待删除接口分析
    else:
        raise Exception("主导者未知, 疑似数据损坏")
    if 主导接口分析 is None or 被动接口分析 is None:
        raise Exception("没有找到对侧接口, 疑似数据损坏")
    if 主导接口分析.连接方向 == 接口方向.自身流向目标:
        主导建筑.输出接口.目标序号 = -1
    elif 主导接口分析.连接方向 == 接口方向.目标流向自身:
        主导建筑.输入接口.目标序号 = -1
    else:
        raise Exception("连接方向未知, 疑似数据损坏")
    主导建筑.悠米_接口分析.接口数据.remove(主导接口分析)
    被动建筑.悠米_接口分析.接口数据.remove(被动接口分析)
